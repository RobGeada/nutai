---
openapi: 3.0.2
info:
  title: nut
  version: 1.0.0
  description: A simple document API for finding similarities
  termsOfService: http://swagger.io/terms/
  contact:
    name: Matthew Farrellee
    url: https://loopback.localhost
    email: matt@cs.wisc.edu
  license:
    name: GNU AGPLv3
    url: https://www.gnu.org/licenses/agpl.txt
paths:
  /documents/{id}:
    get:
      parameters:
      - name: id
        description: Id of document to fetch
        schema:
          type: string
        in: path
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        200:
          content:
            application/json:
              schema:
                type: string
          description: Document response
        404:
          description: Document not found
      operationId: api.findById
      summary: Get a specific document from the repository
      description: Return a document base on its id
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: Document added
        409:
          description: Document already exists
      operationId: api.addDocument
      summary: Add a document to the repository
      description: Add a document to the repository. The user of this operation is
        required to provide the document's body and id. Duplicate ids are not allowed.
    parameters:
    - name: id
      schema:
        type: string
      in: path
      required: true
  /documents/{id}/similar:
    get:
      parameters:
      - name: id
        schema:
          type: string
        in: path
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: Documents
      operationId: api.similarById
      summary: Find similar documents
    parameters:
    - name: id
      schema:
        type: string
      in: path
      required: true
components:
  schemas:
    Error:
      required:
      - code
      - message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
    Document:
      description: ""
      required:
      - id
      type: object
      properties:
        id:
          description: Id of a document
          type: string
        score:
          description: Similarity score
          type: integer
